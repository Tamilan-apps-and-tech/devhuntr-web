{"version":3,"sources":["data/QueryContext.js","data/PageContext.js","data/SiteContext.js","data/LoadingContext.js","logo.svg","components/SearchCard.jsx","components/Github/Issues/IssueStateChip.jsx","components/Github/Issues/IssueCard.jsx","components/Loading.jsx","assets/prev.svg","assets/next.svg","components/PageSwitcher.jsx","data/UrlContext.js","utils/GithubAxios.js","data/Github/IssuseContext.js","assets/crying.svg","components/NoResult.jsx","components/Github/Issues/IssuesList.jsx","components/StackOverflow/Discussions/DiscussionChip.jsx","components/StackOverflow/Discussions/DiscussionCard.jsx","utils/StackOverflowAxios.js","data/StackOverflow/DiscussionsContext.js","components/StackOverflow/Discussions/DiscussionList.jsx","components/Github/Prs/PrStateChip.jsx","components/Github/Prs/PrCard.jsx","data/Github/PrsContext.js","components/Github/Prs/PrsList.jsx","data/Github/RepoContext.js","components/Github/Repos/RepoChip.jsx","assets/code.svg","components/Github/Repos/RepoCard.jsx","components/Github/Repos/RepoList.jsx","utils/BingSpellCheckAxios.js","data/TypoContext.js","components/TypoCard.jsx","utils/AndroidDocsAxios.js","data/Docs/AndroidDocsContext.js","components/Docs/AndroidDocsCard.jsx","components/Docs/AndroidDocsList.jsx","utils/JetpackAxios.js","data/Libraries/JetpackContext.js","components/Libraries/JetapackAndroid/JetpackCard.jsx","components/Libraries/JetapackAndroid/JetapackList.jsx","utils/NpmAxios.js","data/Libraries/NpmContext.js","components/Libraries/Npm/NpmChip.jsx","components/Libraries/Npm/NpmCard.jsx","components/Libraries/Npm/NpmList.jsx","components/ResultsList.jsx","screens/SearchScreen.jsx","assets/logohome.png","screens/HomeScreen.jsx","App.js","index.js"],"names":["QueryContext","React","createContext","QueryProvider","props","useState","query","setQuery","Provider","value","children","PageContext","PageProvider","page","setPage","SiteContext","SiteProvider","site","setSite","LoadingContext","LoadingProvider","status","setStatus","SearchCard","history","useHistory","useContext","queryinpt","setQueryinpt","siteinpt","setSiteinpt","className","defaultValue","onChange","e","target","onClick","preventDefault","push","pathname","search","IssueStateChip","text","IssueCard","item","comments","href","html_url","title","state","Loading","PageSwitcher","window","scrollTo","scrollRef","current","scrollTop","src","prev","next","UrlContext","UrlProvider","url","setUrl","useEffect","data","sites","name","instance","axios","create","baseURL","IssuesContext","IssuesProvider","issues","setIssues","a","get","then","res","items","console","error","getIssues","NoResult","logo","IssuesList","createRef","length","ref","map","index","DiscussionChip","DiscussionCard","hasOwnProperty","question_id","tags","accepted_answer_id","DiscussionsContext","DiscussionsProvider","discussions","setDiscussions","getDiscussions","DiscussionList","PrStateChip","PrCard","PrContext","PrProvider","prs","setPrs","getPrs","PrsList","RepoContext","RepoProvider","repo","setRepo","getRepos","RepoChip","RepoCard","full_name","description","language","RepoList","TypoContext","TypoProvider","typo","setTypo","headers","response","tokens","flaggedTokens","rplcdtext","forEach","replace","token","suggestions","suggestion","log","TypoCard","AndroidDocsContext","AndroidDocsProvider","docs","setDocs","AndroidDocsCard","link","linkRef","desc","AndroidDocsList","JetpackContext","JetpackProvider","jplibs","setJplibs","getLibs","JetpackCard","JetapackList","NpmContext","NpmProvider","npms","setNpms","NpmChip","NpmCard","keywords","NpmList","ResultsList","SearchScreen","useQuery","URLSearchParams","useLocation","pageparam","siteparam","qparam","HomeScreen","App","basename","process","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54d832a1.chunk.js","sourcesContent":["import React, {createContext, useState, useContext, useEffect} from \"react\";\n\nexport const QueryContext = React.createContext()\n\nexport const QueryProvider = (props) => {\n\n\n\n    const [query,setQuery] = useState('')\n\n\n\n\n    return(\n        <QueryContext.Provider value={[query,setQuery]}>\n            {props.children}\n        </QueryContext.Provider>\n    )\n}","import React,  {useState, useEffect} from \"react\";\n\nexport const PageContext = React.createContext()\n\nexport const PageProvider = (props) => {\n\n    const [page,setPage] = useState(1)\n\n\n\n\n\n    return(\n        <PageContext.Provider value={[page,setPage]}>\n            {props.children}\n        </PageContext.Provider>\n    )\n}","import React, {createContext, useState, useContext, useEffect} from 'react';\n\nexport const SiteContext = React.createContext()\n\nexport const SiteProvider = (props) => {\n\n    const [site,setSite] = useState(1)\n\n\n\n\n    return(\n        <SiteContext.Provider value={[site,setSite]}>\n            {props.children}\n        </SiteContext.Provider>\n    )\n}","import React,  {useState, useEffect} from \"react\";\n\nexport const LoadingContext = React.createContext()\n\nexport const LoadingProvider = (props) => {\n\n    const [status,setStatus] = useState(true)\n\n\n\n\n\n    return(\n        <LoadingContext.Provider value={[status,setStatus]}>\n            {props.children}\n        </LoadingContext.Provider>\n    )\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {createRef, useContext, useState} from 'react';\nimport {QueryContext} from \"../data/QueryContext\";\nimport {SiteContext} from '../data/SiteContext'\nimport {PageContext} from '../data/PageContext'\nimport {useHistory} from 'react-router-dom'\nimport logo from '../logo.svg'\nimport {LoadingContext} from \"../data/LoadingContext\";\n\n\nfunction SearchCard(props) {\n\n    const history = useHistory()\n    const [query,setQuery] = useContext(QueryContext)\n    const [site,setSite] = useContext(SiteContext)\n    const [page,setPage] = useContext(PageContext)\n    const [status,setStatus] = useContext(LoadingContext)\n\n\n\n    const [queryinpt,setQueryinpt] = useState('')\n    const [siteinpt,setSiteinpt] = useState(site)\n\n\n    const updateQueryInpt = (e) =>{\n        setQueryinpt(e.target.value)\n    }\n\n    const updateSiteInpt = (e) =>{\n        setSiteinpt(e.target.value)\n    }\n    function updateQuery(e){\n        e.preventDefault()\n\n        if (queryinpt === \"\") {\n\n            history.push({\n                pathname: '/search',\n                search: `?q=${query}&page=1&site=${siteinpt}`\n            })\n\n        }else{\n\n            history.push({\n                pathname: '/search',\n                search: `?q=${queryinpt}&page=1&site=${siteinpt}`\n            })\n\n        }\n    }\n\n\n    return (\n\n        <form  className='drop-shadow-xl bg-black-secondary self-center my-3 flex rounded-full flex w-1/2 justify-between z-10 font-montserrat text-lgshadow-2xl'>\n\n\n            <input  defaultValue={query} onChange={updateQueryInpt}\n                   className='mt-2 mb-2 ml-5 p-2 w-9/12 appearance-none border-none bg-transparent outline-none text-white-secondaryText placeholder-white-secondaryText drop-shadow-2xl'/>\n\n\n            <select value={siteinpt}  className='bg-transparent mr-6 focus:outline-none text-white-secondaryText text-lg'\n                    onChange={updateSiteInpt}>\n                <option className='text-red-text text-xl' value={0} >StackOverflow</option>\n                <option className='text-red-text text-xl' value={1} >Github Issues</option>\n                <option className='text-red-text text-xl' value={2} >Github Prs</option>\n                <option className='text-red-text text-xl' value={3} >Github Repo</option>\n                <option className='text-red-text text-xl' value={4} >Jetpack Android</option>\n                <option className='text-red-text text-xl' value={5} >Android Docs</option>\n                <option className='text-red-text text-xl' value={6} >Npm Package</option>\n            </select>\n            <button onClick={updateQuery}/>\n            {status &&\n            (\n\n\n                    <div className='animate-ping w-5 h-5 rounded-3xl bg-red-accent'/>\n\n            )}\n        </form>\n\n    );\n}\n\n\nexport default SearchCard;","import React from 'react';\n\nfunction IssueStateChip(props) {\n\n    if (props.text === \"no comments\"){\n        return (\n            <div\n                className='bg-orange-chip  flex flex-row w-min inline-block whitespace-nowrap object-fit rounded-full px-3 py-1 text-white-secondaryText mx-1.5 font-montserrat'>\n                no comments\n            </div>\n        );\n    }else {\n        return (\n            <div\n                className='bg-red-text flex flex-row w-min inline-block whitespace-nowrap object-fit rounded-full px-3 py-1 text-white-secondaryText mx-1.5 font-montserrat'>\n                {props.text}\n            </div>\n        );\n    }\n\n\n}\n\nexport default IssueStateChip;","import React from 'react';\nimport IssueStateChip from \"./IssueStateChip\";\n\nfunction IssueCard(props) {\n\n    if (props.item.comments === 0){\n        return (\n            <div\n                className='bg-black-secondary m-3 w-11/12 justify-between self-center  flex-col flex rounded-2xl flex-col'>\n                <a href={props.item.html_url}>\n                    <h1 className='font-montserrat text-white-secondaryText text-xl ml-6 mt-4'>{props.item.title}</h1>\n                </a>\n                <div className='flex-col flex m-3'>\n                    <div className='mb-3'>\n                        <IssueStateChip text={props.item.state}/>\n                    </div>\n                    <IssueStateChip text=\"no comments\"/>\n                </div>\n            </div>\n        );\n    }else {\n        return (\n            <div\n                className='bg-black-secondary m-3 w-11/12 justify-between self-center  flex-col flex rounded-2xl flex-col'>\n                <a href={props.item.html_url}>\n                    <h1 className='font-montserrat text-white-secondaryText text-xl ml-6 mt-4'>{props.item.title}</h1>\n                </a>\n                <div className='flex-col flex m-3'>\n                    <div className='mb-3'>\n                        <IssueStateChip text={props.item.state}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\n\nexport default IssueCard;","import React from 'react';\n\nfunction Loading(props) {\n    return (\n        <div className='w-full flex flex-col h-full'>\n            <h1 className='font-montserrat animate-pulse text-red-text text-2xl justify-center self-center '>Loading please wait...</h1>\n        </div>\n    );\n}\n\nexport default Loading;","export default __webpack_public_path__ + \"static/media/prev.c18f281f.svg\";","export default __webpack_public_path__ + \"static/media/next.9822a404.svg\";","import React, {useContext} from 'react';\nimport prev from '../assets/prev.svg'\nimport next from '../assets/next.svg'\nimport {PageContext} from \"../data/PageContext\";\nimport { useHistory } from \"react-router-dom\";\nimport {QueryContext} from \"../data/QueryContext\";\nimport {SiteContext} from \"../data/SiteContext\";\n\nfunction PageSwitcher(props) {\n\n    const [page,setPage] = useContext(PageContext)\n    const [query,setQuery] = useContext(QueryContext)\n    const [site,setSite] = useContext(SiteContext)\n\n    const history = useHistory()\n\n    function nextPage(){\n        props.scrollRef.current.scrollTop = 0\n        window.scrollTo(0,0)\n        history.push({\n            pathname:'/search',\n            search:`?q=${query}&page=${+page + +1}&site=${site}`\n    })\n    }\n\n    function prevPage(){\n\n        if (page > 1) {\n            window.scrollTo(0, 0)\n            props.scrollRef.current.scrollTop = 0\n\n            setPage(+page - 1)\n\n            history.push({\n                pathname: '/search',\n                search: `?q=${query}&page=${+page - +1}&site=${site}`\n            })\n        }\n\n\n    }\n    return (\n        <div className='flex-row flex h-min w-full m-4 justify-around' >\n            <div className='flex-row flex h-min w-min font-montserrat text-white-secondaryText text-3xl' onClick={prevPage}>\n                <img src={prev} className='object-fill  h-full'/>\n                Previous\n            </div>\n\n            <div className='flex-row flex h-min w-min  font-montserrat text-white-secondaryText text-3xl' onClick={nextPage} >\n                Next\n                <img src={next} className='object-fill  h-full'/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default PageSwitcher;","import React, {createContext, useState, useContext, useEffect} from \"react\";\nimport {QueryContext} from \"./QueryContext\";\nimport {PageContext} from \"./PageContext\";\nimport {changeEndpoint} from \"../utils/EnpointChanger\";\nimport {SiteContext} from \"./SiteContext\";\nimport data from \"./Sites.json\";\n\nexport const UrlContext = React.createContext()\n\nexport const UrlProvider = (props) => {\n\n    const [url,setUrl] = useState()\n\n    const [query,setQuery] = useContext(QueryContext)\n    const [page,setPage] = useContext(PageContext)\n    const [site,setSite] = useContext(SiteContext)\n\n\n\n    useEffect(() => {\n        if (data.sites[site].name === \"StackOverflow\") {\n            setUrl(`search/advanced?page=${page}&order=desc&sort=votes&q=${query}&site=stackoverflow`\n        )\n        }\n\n        if (data.sites[site].name === \"Github Issues\"){\n            setUrl(`/issues?q=${query}+is:issue&per_page=25&page=${page}`)\n\n        }\n\n        if (data.sites[site].name === \"Github Prs\"){\n            setUrl(`/issues?q=${query}+is:pr&per_page=25&page=${page}`)\n\n        }\n\n        if (data.sites[site].name === \"Github Repo\"){\n            setUrl(`/repositories?q=${query}+in:readme&per_page=25&page=${page}`)\n\n        }\n\n        if (data.sites[site].name === \"Github Repo\"){\n            setUrl(`/repositories?q=${query}+in:readme&per_page=25&page=${page}`)\n\n        }\n\n        if (data.sites[site].name === \"Jetpack Android\"){\n            setUrl(`/jp?q=${query}`)\n\n        }\n\n        if (data.sites[site].name === \"Android Docs\"){\n            setUrl(`/android?q=${query}`)\n\n        }\n\n        if (data.sites[site].name === \"Npm Package\"){\n            setUrl(`/npm?q=${query}`)\n\n        }\n\n    },[query,page,site])\n\n\n\n\n\n    return(\n        <UrlContext.Provider value={[url,setUrl]}>\n            {props.children}\n        </UrlContext.Provider>\n    )\n}","import axios from 'axios'\n\nconst instance = axios.create({\n        baseURL: 'https://api.github.com/search/'\n    }\n)\n\nexport default instance","import React, {createContext, useState, useContext, useEffect} from \"react\";\nimport {UrlContext} from \"../UrlContext\";\nimport axios from \"../../utils/GithubAxios\";\nimport {PageContext} from \"../PageContext\";\nimport {LoadingContext} from \"../LoadingContext\";\n\nexport const IssuesContext = React.createContext()\n\nexport const IssuesProvider = (props) => {\n\n    const [url,setUrl] = useContext(UrlContext)\n    const [page,setPage] = useContext(PageContext)\n    const [issues,setIssues] = useState([])\n    const [status,setStatus] = useContext(LoadingContext)\n\n    useEffect(() => {\n\n\n        async function getIssues(){\n\n            setStatus(true)\n            try{\n                await axios.get(url).then((res) => {\n                    setIssues(res.data.items)\n                    setStatus(false)\n                })\n\n            }catch (err){\n                console.error(err)\n            }\n\n        }\n        getIssues()\n\n    },[url])\n\n    return(\n        <IssuesContext.Provider value={[issues,setIssues]}>\n            {props.children}\n        </IssuesContext.Provider>\n    )\n}","export default __webpack_public_path__ + \"static/media/crying.6dd01083.svg\";","import React from 'react';\nimport logo from '../assets/crying.svg'\n\nfunction NoResult(props) {\n    return (\n        <div className='w-full flex flex-col h-full'>\n            <img src={logo} className='w-1/12 justify-center self-center animate-spin-slow'/>\n            <h1 className='font-montserrat animate-pulse text-red-text text-2xl justify-center self-center '>No Results Found</h1>\n        </div>\n    );\n}\n\nexport default NoResult;","import {React, useEffect, useState, useContext, createRef} from 'react';\nimport IssueCard from \"./IssueCard\";\nimport Loading from \"../../Loading\";\nimport PageSwitcher from \"../../PageSwitcher\";\nimport {PageContext} from \"../../../data/PageContext\";\nimport {IssuesContext} from \"../../../data/Github/IssuseContext\";\nimport {LoadingContext} from \"../../../data/LoadingContext\";\nimport NoResult from \"../../NoResult\";\n\nfunction IssuesList(props) {\n\n    const [issues, setISsues] = useContext(IssuesContext)\n    const scrollRef = createRef()\n    const [page,setPage] =useContext(PageContext)\n    const [status,setStatus] = useContext(LoadingContext)\n\n    function nextPage(){\n        setPage(page+1)\n        scrollRef.current.scrollTop = 0\n        window.scrollTo(0,0)\n    }\n\n    function prevPage(){\n\n        if (page != 1){\n            setPage(page-1)\n            window.scrollTo(0,0)\n            scrollRef.current.scrollTop = 0\n\n        }\n    }\n\n\n\n    if (issues.length === 0 ){\n        if (status === true){\n            return (\n                <Loading/>\n            )\n        }else {\n            return (\n                <NoResult/>\n            )\n        }\n    }else {\n        return (\n\n            <div ref={scrollRef} className='w-full h-screen overflow-y-scroll overflow-hidden z-0 '>\n                <div >\n                {\n                    issues.map((item,index) => (\n\n                        <div  key={index} className='flex flex-col overflow-hidden' >\n                            <IssueCard item={item}  />\n                        </div>\n\n                    ))\n                }\n                </div>\n\n                <PageSwitcher scrollRef={scrollRef}/>\n\n            </div>\n        );\n    }\n\n}\n\nexport default IssuesList;","import React from 'react';\n\nfunction DiscussionChip(props) {\n\n    if (props.text === \"recommended\"){\n        return (\n            <div\n                className='bg-blue-chip flex flex-row w-min inline-block whitespace-nowrap object-fit rounded-full px-3 py-1 text-white-secondaryText mx-1.5 font-montserrat'>\n                accepted answer\n            </div>\n        );\n    }\n    else {\n        return (\n            <div\n                className='bg-red-text flex flex-row w-min inline-block whitespace-nowrap object-fit rounded-full px-3 py-1 text-white-secondaryText mx-1.5 font-montserrat'>\n                {props.text}\n            </div>\n        );\n    }\n}\n\nexport default DiscussionChip;","import React from 'react';\nimport DiscussionChip from \"./DiscussionChip\";\n\nfunction DiscussionCard(props) {\n\n\n    if(props.item.hasOwnProperty(\"accepted_answer_id\")) {\n        return (\n            <div className='bg-black-secondary m-3 w-11/12 justify-between self-center  flex-col flex rounded-2xl flex-col'>\n                <a href={'https://stackoverflow.com/questions/'+props.item.question_id}>\n                    <h1 className='font-montserrat text-white-secondaryText text-xl ml-6 mt-4'>{props.item.title}</h1>\n                </a>\n                <div className='flex-col flex m-3'>\n                    <div className='flex flex-row mb-4' >{\n                        props.item.tags.map((item,index) => (\n                                <DiscussionChip text={item}/>\n                        ))\n                    }</div>\n                    <div className='mb-3'>\n                        <a href={'https://stackoverflow.com/questions/'+props.item.question_id+'/#'+props.item.accepted_answer_id}>\n                    <DiscussionChip text=\"recommended\"/>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        );\n    } else if (props.item.hasOwnProperty(\"accepted_answer_id\") === false){\n        return (\n            <div className='bg-black-secondary m-3 w-11/12 justify-between self-center  flex-col flex rounded-2xl flex-col'>\n                <a href={'https://stackoverflow.com/questions/'+props.item.question_id}>\n                <h1 className='font-montserrat text-white-secondaryText text-xl ml-6 mt-4'>{props.item.title}</h1>\n                </a>\n                <div className='flex-col flex m-3'>\n                    <div className='flex flex-row mb-4' >{\n                        props.item.tags.map((item,index) => (\n                            <DiscussionChip text={item}/>\n                        ))\n                    }</div>\n                </div>\n            </div>\n        );\n    }\n\n\n\n\n\n}\n\n\nexport default DiscussionCard;","import axios from 'axios'\n\nconst instance = axios.create({\n        baseURL: 'https://api.stackexchange.com/2.2/'\n    }\n)\n\nexport default instance","import React, {createContext, useState, useContext, useEffect} from \"react\";\nimport {UrlContext} from \"../UrlContext\";\nimport axios from \"../../utils/StackOverflowAxios\";\nimport {PageContext} from \"../PageContext\";\nimport {LoadingContext} from \"../LoadingContext\";\n\nexport const DiscussionsContext = React.createContext()\n\nexport const DiscussionsProvider = (props) => {\n\n    const [url,setUrl] = useContext(UrlContext)\n    const [page,setPage] = useContext(PageContext)\n    const [discussions,setDiscussions] = useState([])\n    const [status,setStatus] = useContext(LoadingContext)\n\n    useEffect(() => {\n\n\n        async function getDiscussions(){\n            setStatus(true)\n            try{\n                await axios.get(url).then((res) => {\n                    setDiscussions(res.data.items)\n                    setStatus(false)\n                })\n\n            }catch (err){\n                console.error(err)\n            }\n\n        }\n        getDiscussions()\n\n    },[url])\n\n    return(\n        <DiscussionsContext.Provider value={[discussions,setDiscussions]}>\n            {props.children}\n        </DiscussionsContext.Provider>\n    )\n}","import {React, useEffect, useState, useContext, createRef} from 'react';\nimport DiscussionCard from \"./DiscussionCard\";\nimport Loading from \"../../Loading\";\nimport {DiscussionsContext} from \"../../../data/StackOverflow/DiscussionsContext\";\nimport PageSwitcher from \"../../PageSwitcher\";\nimport {PageContext} from \"../../../data/PageContext\";\nimport {LoadingContext} from \"../../../data/LoadingContext\";\nimport NoResult from \"../../NoResult\";\n\nfunction DiscussionList(props) {\n\n    const [discussions, setDiscussions] = useContext(DiscussionsContext)\n    const scrollRef = createRef()\n    const [page,setPage] =useContext(PageContext)\n    const [status,setStatus] = useContext(LoadingContext)\n\n    function nextPage(){\n        setPage(page+1)\n        scrollRef.current.scrollTop = 0\n        window.scrollTo(0,0)\n    }\n\n    function prevPage(){\n\n        if (page != 1){\n            setPage(page-1)\n            window.scrollTo(0,0)\n            scrollRef.current.scrollTop = 0\n\n        }\n    }\n\n\n\n    if (discussions.length === 0 ){\n        if (status === true){\n            return (\n                <Loading/>\n            )\n        }else {\n            return (\n                <NoResult/>\n            )\n        }\n    }else {\n        return (\n\n            <div ref={scrollRef} className='w-full h-screen overflow-y-scroll overflow-hidden z-0 '>\n                <div >\n                {\n                    discussions.map((item,index) => (\n\n                        <div  key={index} className='flex flex-col overflow-hidden' >\n                            <DiscussionCard item={item}  />\n                        </div>\n\n                    ))\n                }\n                </div>\n\n                <PageSwitcher scrollRef={scrollRef}/>\n\n            </div>\n        );\n    }\n\n}\n\nexport default DiscussionList;","import React from 'react';\n\nfunction PrStateChip(props) {\n\n    if (props.text === \"no comments\"){\n        return (\n            <div\n                className='bg-orange-chip  flex flex-row w-min inline-block whitespace-nowrap object-fit rounded-full px-3 py-1 text-white-secondaryText mx-1.5 font-montserrat'>\n                no comments\n            </div>\n        );\n    }else {\n        return (\n            <div\n                className='bg-red-text flex flex-row w-min inline-block whitespace-nowrap object-fit rounded-full px-3 py-1 text-white-secondaryText mx-1.5 font-montserrat'>\n                {props.text}\n            </div>\n        );\n    }\n\n\n}\n\nexport default PrStateChip;","import React from 'react';\nimport PrStateChip from \"./PrStateChip\";\n\nfunction PrCard(props) {\n\n    if (props.item.comments === 0){\n        return (\n            <div\n                className='bg-black-secondary m-3 w-11/12 justify-between self-center  flex-col flex rounded-2xl flex-col'>\n                <a href={props.item.html_url}>\n                    <h1 className='font-montserrat text-white-secondaryText text-xl ml-6 mt-4'>{props.item.title}</h1>\n                </a>\n                <div className='flex-col flex m-3'>\n                    <div className='mb-3'>\n                        <PrStateChip text={props.item.state}/>\n                    </div>\n                    <PrStateChip text=\"no comments\"/>\n                </div>\n            </div>\n        );\n    }else {\n        return (\n            <div\n                className='bg-black-secondary m-3 w-11/12 justify-between self-center  flex-col flex rounded-2xl flex-col'>\n                <a href={props.item.html_url}>\n                    <h1 className='font-montserrat text-white-secondaryText text-xl ml-6 mt-4'>{props.item.title}</h1>\n                </a>\n                <div className='flex-col flex m-3'>\n                    <div className='mb-3'>\n                        <PrStateChip text={props.item.state}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\n\nexport default PrCard;","import React, {createContext, useState, useContext, useEffect} from \"react\";\nimport {UrlContext} from \"../UrlContext\";\nimport axios from \"../../utils/GithubAxios\";\nimport {PageContext} from \"../PageContext\";\nimport {LoadingContext} from \"../LoadingContext\";\n\nexport const PrContext = React.createContext()\n\nexport const PrProvider = (props) => {\n\n    const [url,setUrl] = useContext(UrlContext)\n    const [page,setPage] = useContext(PageContext)\n    const [prs,setPrs] = useState([])\n    const [status,setStatus] = useContext(LoadingContext)\n\n    useEffect(() => {\n\n\n        async function getPrs(){\n            setStatus(true)\n            try{\n                await axios.get(url).then((res) => {\n                    setPrs(res.data.items)\n                    setStatus(false)\n                })\n\n            }catch (err){\n                console.error(err)\n            }\n\n        }\n        getPrs()\n\n    },[url])\n\n    return(\n        <PrContext.Provider value={[prs,setPrs]}>\n            {props.children}\n        </PrContext.Provider>\n    )\n}","import {React, useEffect, useState, useContext, createRef} from 'react';\nimport PrCard from \"./PrCard\";\nimport Loading from \"../../Loading\";\nimport PageSwitcher from \"../../PageSwitcher\";\nimport {PageContext} from \"../../../data/PageContext\";\nimport {PrContext} from \"../../../data/Github/PrsContext\";\nimport {LoadingContext} from \"../../../data/LoadingContext\";\nimport NoResult from \"../../NoResult\";\n\nfunction PrsList(props) {\n\n    const [prs, setPrs] = useContext(PrContext)\n    const scrollRef = createRef()\n    const [page,setPage] =useContext(PageContext)\n    const [status,setStatus] = useContext(LoadingContext)\n\n    function nextPage(){\n        setPage(page+1)\n        scrollRef.current.scrollTop = 0\n        window.scrollTo(0,0)\n    }\n\n    function prevPage(){\n\n        if (page != 1){\n            setPage(page-1)\n            window.scrollTo(0,0)\n            scrollRef.current.scrollTop = 0\n\n        }\n    }\n\n\n\n    if (prs.length === 0 ){\n        if (status === true){\n            return (\n                <Loading/>\n            )\n        }else {\n            return (\n                <NoResult/>\n            )\n        }\n    }else {\n        return (\n\n            <div ref={scrollRef} className='w-full h-screen overflow-y-scroll overflow-hidden z-0 '>\n                <div >\n                {\n                    prs.map((item,index) => (\n\n                        <div  key={index} className='flex flex-col overflow-hidden' >\n                            <PrCard item={item}  />\n                        </div>\n\n                    ))\n                }\n                </div>\n\n                <PageSwitcher scrollRef={scrollRef}/>\n\n            </div>\n        );\n    }\n\n}\n\nexport default PrsList;","import React, {createContext, useState, useContext, useEffect} from \"react\";\nimport {UrlContext} from \"../UrlContext\";\nimport axios from \"../../utils/GithubAxios\";\nimport {PageContext} from \"../PageContext\";\nimport {LoadingContext} from \"../LoadingContext\";\n\nexport const RepoContext = createContext()\n\nexport const RepoProvider = (props) => {\n\n    const [url,setUrl] = useContext(UrlContext)\n    const [repo,setRepo] = useState([])\n    const [status,setStatus] = useContext(LoadingContext)\n\n    useEffect(() => {\n\n\n        async function getRepos(){\n            setStatus(true)\n            try{\n                await axios.get(url).then((res) => {\n                    setRepo(res.data.items)\n                    setStatus(false)\n                })\n\n            }catch (err){\n                console.error(err)\n            }\n\n        }\n        getRepos()\n\n    },[url])\n\n    return(\n        <RepoContext.Provider value={[repo,setRepo]}>\n            {props.children}\n        </RepoContext.Provider>\n    )\n}","import React from 'react';\n\nfunction RepoChip(props) {\n\n    if (props.text === \"no comments\"){\n        return (\n            <div\n                className='bg-orange-chip  flex flex-row w-min inline-block whitespace-nowrap object-fit rounded-full px-3 py-1 text-white-secondaryText mx-1.5 font-montserrat'>\n                no comments\n            </div>\n        );\n    }else {\n        return (\n            <div\n                className='bg-red-text flex flex-row w-min inline-block whitespace-nowrap object-fit rounded-full px-3 py-1 text-white-secondaryText mx-1.5 font-montserrat'>\n                {props.text}\n            </div>\n        );\n    }\n\n\n}\n\nexport default RepoChip;","export default __webpack_public_path__ + \"static/media/code.09c01712.svg\";","import React,{useRef} from 'react';\nimport RepoChip from \"./RepoChip\";\nimport code from '../../../assets/code.svg'\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nfunction RepoCard(props) {\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClose = () =>{\n        setOpen(false)\n    }\n    const handleOpen = ()=> {\n        setOpen(true)\n    }\n        return (\n            <div\n                className='bg-black-secondary m-3 w-11/12 justify-between self-center  flex-col flex rounded-2xl flex-col'>\n                <a href={props.item.html_url}>\n                    <h1 className='font-montserrat text-white-secondaryText text-2xl ml-6 mr-6 mt-4 '>{props.item.full_name}</h1>\n                </a>\n\n\n                <h1 className='font-montserrat text-white-secondaryText ml-6 text-lg m-2 opacity-50'>{props.item.description}</h1>\n\n                    <div  className='bg-black-bg inline-block whitespace-nowrap w-min ml-6 rounded-md opacity-50'>\n                </div>\n                <div className='flex-col flex ml-3 mt-3 mb-3'>\n                    <div className='mb-3'>\n                        <RepoChip text={props.item.language}/>\n                    </div>\n                </div>\n\n            </div>\n\n\n        );\n\n\n\n\n}\n\n\nexport default RepoCard;","import {React, useEffect, useState, useContext, createRef} from 'react';\nimport RepoCard from \"./RepoCard\";\nimport Loading from \"../../Loading\";\nimport PageSwitcher from \"../../PageSwitcher\";\nimport {PageContext} from \"../../../data/PageContext\";\nimport {RepoContext} from \"../../../data/Github/RepoContext\";\nimport {LoadingContext} from \"../../../data/LoadingContext\";\nimport NoResult from \"../../NoResult\";\n\nfunction RepoList(props) {\n\n    const [repo, setRepo] = useContext(RepoContext)\n    const scrollRef = createRef()\n    const [page,setPage] =useContext(PageContext)\n    const [status,setStatus] = useContext(LoadingContext)\n\n    if (repo.length === 0 ){\n        if (status === true){\n            return (\n                <Loading/>\n            )\n        }else {\n            return (\n                <NoResult/>\n            )\n        }\n    }else {\n        return (\n\n            <div ref={scrollRef} className='w-full h-screen overflow-y-scroll overflow-hidden z-0 '>\n                <div >\n                {\n                    repo.map((item,index) => (\n\n                        <div  key={index} className='flex flex-col overflow-hidden' >\n                            <RepoCard item={item}/>\n                        </div>\n\n                    ))\n                }\n                </div>\n\n                <PageSwitcher scrollRef={scrollRef}/>\n\n            </div>\n        );\n    }\n\n}\n\nexport default RepoList;","import axios from 'axios'\n\nconst instance = axios.create({\n        baseURL: 'https://api.bing.microsoft.com/v7.0/spellcheck'\n    }\n)\n\nexport default instance","import React, {createContext, useState, useContext, useEffect} from \"react\";\nimport {QueryContext} from \"./QueryContext\";\nimport axios from \"../utils/BingSpellCheckAxios\";\nimport {useHistory} from \"react-router-dom\";\nimport {PageContext} from \"./PageContext\";\nimport {SiteContext} from \"./SiteContext\";\n\nexport const TypoContext = React.createContext()\n\nexport const TypoProvider = (props) => {\n\n    const history = useHistory()\n\n    const [query,setQuery] = useContext(QueryContext)\n    const [page,setPage] = useContext(PageContext)\n    const [site,setSite] = useContext(SiteContext)\n    const [typo,setTypo] = useState('')\n\n\n\n    useEffect(() => {\n        if (query !== \"\"){\n            axios.get(`https://api.bing.microsoft.com/v7.0/spellcheck?text=${query}&mode=spell`,{\n                headers:{\n                    \"Ocp-Apim-Subscription-Key\":\"744b9a40e5774c6e8f3ae65a0d21b4a7\"\n                }\n            }) .then((response) => {\n                    const tokens = response.data.flaggedTokens\n\n                    if (tokens.length !== 0){\n                        let rplcdtext = query\n\n\n\n                        tokens.forEach((item, index) => {\n\n                            rplcdtext = rplcdtext.replace(item.token,item.suggestions[0].suggestion)\n                            console.log(item.token,item.suggestions[0].suggestion)\n\n                            console.log(tokens.length)\n                            if (index === tokens.length-1) {\n\n                                console.log(rplcdtext)\n                                console.log(tokens.length -1)\n                                setTypo(rplcdtext)\n\n                            }\n                        })\n\n\n\n                    }else {\n                        setQuery(query)\n                        setTypo(\"\")\n                    }\n                }\n            )\n        }else {\n\n        }\n    },[query])\n\n    return(\n        <TypoContext.Provider value={[typo,setTypo]}>\n            {props.children}\n        </TypoContext.Provider>\n    )\n}","import React, {useContext} from 'react';\nimport {TypoContext} from \"../data/TypoContext\";\nimport {PageContext} from \"../data/PageContext\";\nimport {SiteContext} from \"../data/SiteContext\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction TypoCard(props) {\n\n    const [page,setPage] = useContext(PageContext)\n    const [site,setSite] = useContext(SiteContext)\n    const [typo,setTypo] = useContext(TypoContext)\n\n\n    const history = useHistory()\n    function updateQuery(e){\n        e.preventDefault()\n            history.push({\n                pathname: '/search',\n                search: `?q=${typo}&page=${page}&site=${site}`\n            })\n\n    }\n    if (typo === \"\") {\n\n        return (\n            <div></div>\n        );\n    }else {\n        return (\n            <div className='ml-5 animate-bounce cursor-pointer text-white-secondaryText text-xl font-montserrat' onClick={updateQuery}>Typo found: {typo}</div>\n        );\n    }\n\n}\n\nexport default TypoCard;","import axios from 'axios'\n\nconst instance = axios.create({\n        baseURL: 'https://devhuntr.herokuapp.com/'\n    }\n)\n\nexport default instance","import React, {createContext, useState, useContext, useEffect} from \"react\";\nimport {UrlContext} from \"../UrlContext\";\nimport axios from \"../../utils/AndroidDocsAxios\";\nimport {LoadingContext} from \"../LoadingContext\";\n\n\nexport const AndroidDocsContext = createContext()\n\nexport const AndroidDocsProvider = (props) => {\n\n    const [url,setUrl] = useContext(UrlContext)\n    const [docs,setDocs] = useState([])\n    const [status,setStatus] = useContext(LoadingContext)\n\n\n    useEffect(() => {\n\n\n        async function getRepos(){\n            setStatus(true)\n            try{\n                await axios.get(url).then((res) => {\n                    setDocs(res.data)\n                    setStatus(false)\n                })\n\n            }catch (err){\n                console.error(err)\n            }\n\n        }\n        getRepos()\n\n    },[url])\n\n    return(\n        <AndroidDocsContext.Provider value={[docs,setDocs]}>\n            {props.children}\n        </AndroidDocsContext.Provider>\n    )\n}","import React from 'react';\n\n\nfunction AndroidDocsCard(props) {\n\n        return (\n            <div\n                className='bg-black-secondary m-3 w-11/12 justify-between self-center  flex-col flex rounded-2xl flex-col'>\n                <a href={props.item.link}>\n                    <h1 className='font-montserrat text-white-secondaryText text-xl ml-6 mt-4'>{props.item.title}</h1>\n                </a>\n                <h1 className='font-montserrat text-orange-chip mt-2  text-xl ml-6'>{props.item.linkRef}</h1>\n                <h1 className='font-montserrat text-white-secondaryText opacity-50 text-xl ml-6 mb-4 mt-2'>{props.item.desc}</h1>\n\n            </div>\n        );\n\n\n\n}\n\n\nexport default AndroidDocsCard;","import {React, useEffect, useState, useContext, createRef} from 'react';\nimport AndroidDocsCard from \"./AndroidDocsCard\";\nimport Loading from \"../Loading\";\nimport PageSwitcher from \"../PageSwitcher\";\nimport {PageContext} from \"../../data/PageContext\";\nimport {LoadingContext} from \"../../data/LoadingContext\";\nimport {AndroidDocsContext} from \"../../data/Docs/AndroidDocsContext\";\nimport NoResult from \"../NoResult\";\n\nfunction AndroidDocsList(props) {\n\n    const [docs, setDocs] = useContext(AndroidDocsContext)\n    const scrollRef = createRef()\n    const [page,setPage] =useContext(PageContext)\n    const [status,setStatus] = useContext(LoadingContext)\n\n    function nextPage(){\n        setPage(page+1)\n        scrollRef.current.scrollTop = 0\n        window.scrollTo(0,0)\n    }\n\n    function prevPage(){\n\n        if (page != 1){\n            setPage(page-1)\n            window.scrollTo(0,0)\n            scrollRef.current.scrollTop = 0\n\n        }\n    }\n\n\n\n    if (docs.length === 0 ){\n\n        if (status === true){\n\n            return (\n                <Loading/>\n            )\n        }else {\n            return (\n                <NoResult/>\n            )\n        }\n\n    }else {\n        return (\n\n            <div ref={scrollRef} className='w-full h-screen overflow-y-scroll overflow-hidden z-0 '>\n                <div >\n                {\n                    docs.map((item,index) => (\n\n                        <div  key={index} className='flex flex-col overflow-hidden' >\n                            <AndroidDocsCard item={item}  />\n                        </div>\n\n                    ))\n                }\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\nexport default AndroidDocsList;","import axios from 'axios'\n\nconst instance = axios.create({\n        baseURL: 'https://devhuntr.herokuapp.com/'\n    }\n)\n\nexport default instance","import React, {createContext, useState, useContext, useEffect} from \"react\";\nimport {UrlContext} from \"../UrlContext\";\nimport axios from \"../../utils/JetpackAxios\";\nimport {PageContext} from \"../PageContext\";\nimport {LoadingContext} from \"../LoadingContext\";\n\nexport const JetpackContext = React.createContext()\n\nexport const JetpackProvider = (props) => {\n\n    const [url,setUrl] = useContext(UrlContext)\n    const [page,setPage] = useContext(PageContext)\n    const [jplibs,setJplibs] = useState([])\n    const [status,setStatus] = useContext(LoadingContext)\n\n    useEffect(() => {\n\n\n        async function getLibs(){\n            setStatus(true)\n            try{\n                await axios.get(url).then((res) => {\n                    setJplibs(res.data)\n                    setStatus(false)\n                })\n\n            }catch (err){\n                console.error(err)\n            }\n\n        }\n        getLibs()\n\n    },[url])\n\n    return(\n        <JetpackContext.Provider value={[jplibs,setJplibs]}>\n            {props.children}\n        </JetpackContext.Provider>\n    )\n}","import React from 'react';\n\nfunction JetpackCard(props) {\n\n    return (\n        <div\n            className='bg-black-secondary m-3 w-11/12 justify-between self-center  flex-col flex rounded-2xl flex-col'>\n            <a href={props.item.link}>\n                <h1 className='font-montserrat text-white-secondaryText text-xl ml-6 mt-4'>{props.item.title}</h1>\n            </a>\n            <h1 className='font-montserrat text-white-secondaryText opacity-50 text-xl ml-6 mb-4 mt-2'>{props.item.desc}</h1>\n\n        </div>\n    );\n\n}\n\n\nexport default JetpackCard;","import {React, useEffect, useState, useContext, createRef} from 'react';\nimport JetpackCard from \"./JetpackCard\";\nimport Loading from \"../../Loading\";\nimport PageSwitcher from \"../../PageSwitcher\";\nimport {PageContext} from \"../../../data/PageContext\";\nimport {JetpackContext} from \"../../../data/Libraries/JetpackContext\";\nimport {LoadingContext} from \"../../../data/LoadingContext\";\nimport NoResult from \"../../NoResult\";\n\nfunction JetapackList(props) {\n\n    const [jplibs, setJplibs] = useContext(JetpackContext)\n    const scrollRef = createRef()\n    const [page,setPage] =useContext(PageContext)\n    const [status,setStatus] = useContext(LoadingContext)\n\n    function nextPage(){\n        setPage(page+1)\n        scrollRef.current.scrollTop = 0\n        window.scrollTo(0,0)\n    }\n\n    function prevPage(){\n\n        if (page != 1){\n            setPage(page-1)\n            window.scrollTo(0,0)\n            scrollRef.current.scrollTop = 0\n\n        }\n    }\n\n\n\n    if (jplibs.length === 0 ){\n        if (status === true){\n            return (\n                <Loading/>\n            )\n        }else {\n            return (\n                <NoResult/>\n            )\n        }\n    }else {\n        return (\n\n            <div ref={scrollRef} className='w-full h-screen overflow-y-scroll overflow-hidden z-0 '>\n                <div >\n                {\n                    jplibs.map((item,index) => (\n\n                        <div  key={index} className='flex flex-col overflow-hidden' >\n                            <JetpackCard item={item}  />\n                        </div>\n\n                    ))\n                }\n                </div>\n\n\n            </div>\n        );\n    }\n\n}\n\nexport default JetapackList;","import axios from 'axios'\n\nconst instance = axios.create({\n        baseURL: 'https://devhuntr.herokuapp.com/'\n    }\n)\n\nexport default instance","import React, {createContext, useState, useContext, useEffect} from \"react\";\nimport {UrlContext} from \"../UrlContext\";\nimport axios from \"../../utils/NpmAxios\";\nimport {PageContext} from \"../PageContext\";\nimport {LoadingContext} from \"../LoadingContext\";\n\nexport const NpmContext = React.createContext()\n\nexport const NpmProvider = (props) => {\n\n    const [url,setUrl] = useContext(UrlContext)\n    const [page,setPage] = useContext(PageContext)\n    const [npms,setNpms] = useState([])\n    const [status,setStatus] = useContext(LoadingContext)\n\n    useEffect(() => {\n\n\n        async function getLibs(){\n            setStatus(true)\n            try{\n                await axios.get(url).then((res) => {\n                    setNpms(res.data)\n                    setStatus(false)\n                })\n\n            }catch (err){\n                console.error(err)\n            }\n\n        }\n        getLibs()\n\n    },[url])\n\n    return(\n        <NpmContext.Provider value={[npms,setNpms]}>\n            {props.children}\n        </NpmContext.Provider>\n    )\n}","import React from 'react';\n\nfunction NpmChip(props) {\n\n\n        return (\n            <div\n                className='bg-red-text flex flex-row w-min inline-block whitespace-nowrap object-fit rounded-full px-3 py-1 text-white-secondaryText mx-1.5 font-montserrat'>\n                {props.text}\n            </div>\n        );\n\n}\n\nexport default NpmChip;","import React from 'react';\nimport NpmChip from \"../Npm/NpmChip\";\n\nfunction NpmCard(props) {\n\n    return (\n        <div\n            className='bg-black-secondary m-3 w-11/12 justify-between self-center  flex-col flex rounded-2xl flex-col'>\n            <a href={`http://npmjs.org/${props.item.name}`}>\n                <h1 className='font-montserrat text-white-secondaryText text-xl ml-6 mb-0 m-4'>{props.item.name}</h1>\n            </a>\n            <h1 className='font-montserrat text-white-secondaryText text-xl ml-6 m-4 opacity-50'>{props.item.description}</h1>\n            <div className='flex flex-row mb-4 ml-4' >{\n                props.item.keywords.map((item,index) => (\n                    <NpmChip text={item}/>\n                ))\n            }</div>\n        </div>\n    );\n\n}\n\n\nexport default NpmCard;","import {React, useEffect, useState, useContext, createRef} from 'react';\nimport NpmCard from \"./NpmCard\";\nimport Loading from \"../../Loading\";\nimport PageSwitcher from \"../../PageSwitcher\";\nimport {PageContext} from \"../../../data/PageContext\";\nimport {JetpackContext} from \"../../../data/Libraries/JetpackContext\";\nimport {NpmContext} from \"../../../data/Libraries/NpmContext\";\nimport {LoadingContext} from \"../../../data/LoadingContext\";\nimport NoResult from \"../../NoResult\";\n\nfunction NpmList(props) {\n\n    const [npms, setSetNpms] = useContext(NpmContext)\n    const scrollRef = createRef()\n    const [page,setPage] =useContext(PageContext)\n    const [status,setStatus] = useContext(LoadingContext)\n\n    function nextPage(){\n        setPage(page+1)\n        scrollRef.current.scrollTop = 0\n        window.scrollTo(0,0)\n    }\n\n    function prevPage(){\n\n        if (page != 1){\n            setPage(page-1)\n            window.scrollTo(0,0)\n            scrollRef.current.scrollTop = 0\n\n        }\n    }\n\n\n\n    if (npms.length === 0 ){\n        if (status === true){\n            return (\n                <Loading/>\n            )\n        }else {\n            return (\n                <NoResult/>\n            )\n        }\n    }else {\n        return (\n\n            <div ref={scrollRef} className='w-full h-screen overflow-y-scroll overflow-hidden z-0 '>\n                            <NpmCard item={npms}  />\n            </div>\n        );\n    }\n\n}\n\nexport default NpmList;","import React, {useContext} from 'react';\nimport {SiteContext} from'../data/SiteContext'\nimport {QueryContext} from'../data/QueryContext'\nimport data from '../data/Sites.json'\nimport SearchCard from \"./SearchCard\";\nimport IssuesList from \"./Github/Issues/IssuesList\";\nimport DiscussionList from \"./StackOverflow/Discussions/DiscussionList\";\nimport PrsList from \"./Github/Prs/PrsList\";\nimport {DiscussionsProvider} from \"../data/StackOverflow/DiscussionsContext\";\nimport {IssuesProvider} from \"../data/Github/IssuseContext\";\nimport {PrProvider} from \"../data/Github/PrsContext\";\nimport {RepoProvider} from \"../data/Github/RepoContext\";\nimport RepoList from \"./Github/Repos/RepoList\";\nimport TypoCard from \"./TypoCard\";\nimport {AndroidDocsProvider} from \"../data/Docs/AndroidDocsContext\";\nimport AndroidDocsList from \"./Docs/AndroidDocsList\";\nimport {JetpackProvider} from \"../data/Libraries/JetpackContext\";\nimport JetapackList from \"./Libraries/JetapackAndroid/JetapackList\";\nimport {NpmProvider} from \"../data/Libraries/NpmContext\";\nimport NpmList from \"./Libraries/Npm/NpmList\";\n\nfunction ResultsList(props) {\n\n\n    const [site,setSite] = useContext(SiteContext)\n    const [query,setQuery] = useContext(QueryContext)\n\n    if (data.sites[site].name === \"Github Issues\"){\n        return (\n            <div className='w-full h-full flex flex-col '>\n                <IssuesProvider>\n                <SearchCard/>\n                    <TypoCard/>\n                <IssuesList/>\n                </IssuesProvider>\n            </div>\n        );\n    }\n    if (data.sites[site].name === \"StackOverflow\"){\n        return (\n\n            <div className='w-full h-full flex flex-col '>\n                <DiscussionsProvider>\n                <SearchCard/>\n                    <TypoCard/>\n                <DiscussionList/>\n                </DiscussionsProvider>\n            </div>\n        );\n\n    } if (data.sites[site].name === \"Github Prs\") {\n        return (\n            <div className='w-full h-full flex flex-col '>\n                <PrProvider>\n                <SearchCard/>\n                    <TypoCard/>\n                <PrsList/>\n                </PrProvider>\n            </div>\n        );\n    } if (data.sites[site].name === \"Github Repo\") {\n        return (\n            <div className='w-full h-full flex flex-col '>\n                <RepoProvider>\n                    <SearchCard/>\n                    <TypoCard/>\n                    <RepoList/>\n                </RepoProvider>\n            </div>\n        );\n    } if (data.sites[site].name === \"Android Docs\") {\n        return (\n            <div className='w-full h-full flex flex-col '>\n                <AndroidDocsProvider>\n                    <SearchCard/>\n                    <TypoCard/>\n                    <AndroidDocsList/>\n                </AndroidDocsProvider>\n            </div>\n        );\n    } if (data.sites[site].name === \"Jetpack Android\") {\n        return (\n            <div className='w-full h-full flex flex-col '>\n                <JetpackProvider>\n                    <SearchCard/>\n                    <TypoCard/>\n                    <JetapackList/>\n                </JetpackProvider>\n            </div>\n        );\n    }if (data.sites[site].name === \"Npm Package\") {\n        return (\n            <div className='w-full h-full flex flex-col '>\n                <NpmProvider>\n                    <SearchCard/>\n                    <TypoCard/>\n                    <NpmList/>\n                </NpmProvider>\n            </div>\n        );\n    }\n}\n\nexport default ResultsList;","import React, {useContext, useEffect, useState} from 'react';\nimport {useLocation} from 'react-router-dom'\nimport {QueryContext} from \"../data/QueryContext\";\nimport {PageContext} from \"../data/PageContext\";\nimport {SiteContext} from \"../data/SiteContext\";\nimport ResultsList from \"../components/ResultsList\";\nimport axios from \"../utils/BingSpellCheckAxios\";\n\n\nfunction SearchScreen(props) {\n\n\n\n    function useQuery(){\n        return new URLSearchParams(useLocation().search)\n    }\n\n    let pageparam = useQuery().get('page')\n\n\n    const [page,setPage] = useContext(PageContext)\n\n    setPage(pageparam)\n\n\n    let siteparam = useQuery().get('site')\n    const [site,setSite] = useContext(SiteContext)\n    setSite(siteparam)\n\n    let qparam = useQuery().get('q')\n    const [query,setQuery] = useContext(QueryContext)\n    setQuery(qparam)\n\n\n    return (\n\n        <div className='overflow-hidden w-full h-full flex flex-col '>\n          <ResultsList/>\n        </div>\n\n    );\n\n}\n\nexport default SearchScreen;","export default __webpack_public_path__ + \"static/media/logohome.651f14d6.png\";","import React, {useContext, useState} from 'react';\nimport logo from '../assets/logohome.png'\nimport {useHistory} from \"react-router-dom\";\nimport {QueryContext} from \"../data/QueryContext\";\nimport {SiteContext} from \"../data/SiteContext\";\nimport {PageContext} from \"../data/PageContext\";\nimport axios from \"../utils/BingSpellCheckAxios\";\n\nfunction HomeScreen(props) {\n\n    const history = useHistory()\n    const [query,setQuery] = useContext(QueryContext)\n    const [site,setSite] = useContext(SiteContext)\n    const [page,setPage] = useContext(PageContext)\n\n\n\n    const [queryinpt,setQueryinpt] = useState('')\n    const [siteinpt,setSiteinpt] = useState(site)\n\n\n    const updateQueryInpt = (e) =>{\n        setQueryinpt(e.target.value)\n    }\n\n    const updateSiteInpt = (e) =>{\n        setSiteinpt(e.target.value)\n    }\n    function updateQuery(e){\n        e.preventDefault()\n\n            history.push({\n                pathname: '/search',\n                search: `?q=${queryinpt}&page=${page}&site=${siteinpt}`\n            })\n\n    }\n\n\n    return (\n        <div className='flex justify-center h-screen flex-col items-center'>\n\n                <img src={logo} className='h-1/6'/>\n\n\n            <form  className='drop-shadow-xl bg-black-secondary self-center my-5 flex rounded-full flex w-1/2 justify-between z-10 font-montserrat text-lgshadow-2xl'>\n                <input  defaultValue={query} onChange={updateQueryInpt}\n                        className='mt-2 mb-2 ml-5 p-2 w-9/12 border-none bg-transparent outline-none text-white-secondaryText placeholder-white-secondaryText drop-shadow-2xl'/>\n                <select value={siteinpt}  className='bg-transparent mr-6 focus:outline-none text-white-secondaryText text-lg'\n                        onChange={updateSiteInpt}>\n                    <option className='text-red-text text-xl' value={0} >StackOverflow</option>\n                    <option className='text-red-text text-xl' value={1} >Github Issues</option>\n                    <option className='text-red-text text-xl' value={2} >Github Prs</option>\n                    <option className='text-red-text text-xl' value={3} >Github Repo</option>\n                    <option className='text-red-text text-xl' value={4} >Jetpack Android</option>\n                    <option className='text-red-text text-xl' value={5} >Android Docs</option>\n                    <option className='text-red-text text-xl' value={6} >Npm Package</option>\n                </select>\n                <button onClick={updateQuery}/>\n            </form>\n        </div>\n    );\n}\n\nexport default HomeScreen;","import SearchScreen from \"./screens/SearchScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport {UrlProvider} from \"./data/UrlContext\";\nimport React from \"react\";\nimport {DiscussionsProvider} from \"./data/StackOverflow/DiscussionsContext\";\nimport {QueryProvider} from \"./data/QueryContext\";\nimport {PageProvider} from \"./data/PageContext\";\nimport {SiteProvider} from \"./data/SiteContext\";\nimport {IssuesProvider} from \"./data/Github/IssuseContext\";\nimport {TypoProvider} from \"./data/TypoContext\";\nimport {LoadingProvider} from \"./data/LoadingContext\";\n\nfunction App() {\n  return (\n      <SiteProvider>\n      <PageProvider>\n      <QueryProvider>\n      <UrlProvider>\n          <TypoProvider>\n              <LoadingProvider>\n      <main>\n          <HashRouter basename={process.env.PUBLIC_URL}>\n          <Switch>\n              <Route path='/search' component={SearchScreen} />\n              <Route path='/' component={HomeScreen} />\n          </Switch>\n          </HashRouter>\n      </main>\n              </LoadingProvider>\n          </TypoProvider>\n      </UrlProvider>\n      </QueryProvider>\n      </PageProvider>\n      </SiteProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <div>\n          <App/>\n      </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}